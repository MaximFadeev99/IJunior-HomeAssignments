using System;
using System.Collections.Generic;
using System.Linq;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Searcher searcher = new Searcher();

            searcher.SearchForFreeCriminals();
        }
    }    

    class Searcher 
    {
        private List<Criminal> _criminals = new List<Criminal>();

        public Searcher() 
        {
            AddInitialCriminals();        
        }

        public void SearchForFreeCriminals() 
        {
            string height = "рост";
            string weight = "вес";
            int userInputHeight;
            int userInputWeight;
            string userInputNationality;
            List<Criminal> filteredCriminals;

            userInputHeight = EnquireParameter(height);
            userInputWeight = EnquireParameter(weight);
            Console.Write("Укажите гражданство подозреваемого: ");
            userInputNationality = Console.ReadLine();
            filteredCriminals = FilterCriminals(_criminals, userInputHeight, userInputWeight, userInputNationality);
            ShowFilteredCriminals(filteredCriminals.ToList());
        }

        private int EnquireParameter(string parameter)
        {           
            int verifiedParameter;

            do
            {
                Console.Write($"Укажите {parameter} подозреваемого: ");
            }
            while (int.TryParse(Console.ReadLine(), out verifiedParameter) == false);

            return verifiedParameter;
        }

        private List<Criminal> FilterCriminals(List<Criminal> criminals, int height, int weight, string nationality)
        {
            var filteredCriminals = from criminal in criminals
                                    where (criminal.Nationality == nationality && criminal.Height == height
                                    && criminal.Weight == weight && criminal.IsImprisoned == false)
                                    select criminal;
            return filteredCriminals.ToList();
        }

        private void ShowFilteredCriminals(List<Criminal> criminals)
        {
            Console.WriteLine($"\nФИО   -    Гражданство  -  Рост  -  Вес  -  Статус\n");

            foreach (var criminal in criminals)
            {
                Console.WriteLine($"{criminal.FullName} - {criminal.Nationality}  -  {criminal.Height}  -  {criminal.Weight}  -  {criminal.Status}");
            }

            Console.ReadKey();
        }

        private void AddInitialCriminals()        
        {
            _criminals.Add(new Criminal("Иванов Петр Васильевич", "Россия", 175, 80, true));
            _criminals.Add(new Criminal("Сурков Владимир Петрович", "Россия", 175, 80, false));
            _criminals.Add(new Criminal("Матвеев Матвей Матвеевич", "Россия", 175, 80, false));
            _criminals.Add(new Criminal("Максимов Максим Максимович", "Россия", 175, 80, false));
            _criminals.Add(new Criminal("Ахбетов Худайдот Магометович", "Белоруссия", 185, 87, false));
            _criminals.Add(new Criminal("Проско Василий Николаевич", "Белоруссия", 185, 87, false));
            _criminals.Add(new Criminal("Романенко Петр Игнатьевич", "Белоруссия", 185, 87, true));
            _criminals.Add(new Criminal("Коркина Любовь Алексеевна", "Россия", 175, 80, true));
            _criminals.Add(new Criminal("Райнхардт Лили Игоревна", "Россия", 175, 80, false));
            _criminals.Add(new Criminal("Махно Иван Васильевич", "Белоруссия", 185, 87, false));
            _criminals.Add(new Criminal("Приходько Емельян Корнеевич", "Белоруссия", 185, 87, false));
        }
    }

    class Criminal
    {
        public Criminal(string fullName, string nationality, int height, int weight, bool isImprisoned)
        {
            FullName = fullName;
            Nationality = nationality;
            Height = height;
            Weight = weight;
            IsImprisoned = isImprisoned;
            Status = SetStatus();
        }

        public string FullName { get; private set; }
        public string Nationality { get; private set; }
        public int Height { get; private set; }
        public int Weight { get; private set; }
        public bool IsImprisoned { get; private set; }
        public string Status { get; private set; }

        private string SetStatus()
        {
            if (IsImprisoned)
            {
                return "Отбывает срок";
            }
            else
            {
                return "На свободе";
            }
        }
    }
}
