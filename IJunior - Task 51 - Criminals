using System;
using System.Collections.Generic;
using System.Linq;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<Criminal> criminals = new List<Criminal>()
                { new Criminal("Иванов Петр Васильевич", "Россия", 175, 80, true),
                new Criminal("Сурков Владимир Петрович", "Россия", 175, 80, false),
                new Criminal("Матвеев Матвей Матвеевич", "Россия", 175, 80, false),
                new Criminal("Максимов Максим Максимович", "Россия", 175, 80, false),
                new Criminal("Ахбетов Худайдот Магометович", "Белоруссия", 185, 87, false),
                new Criminal("Проско Василий Николаевич", "Белоруссия", 185, 87, false),
                new Criminal("Романенко Петр Игнатьевич", "Белоруссия", 185, 87, true),
                new Criminal("Коркина Любовь Алексеевна", "Россия", 175, 80, true),
                new Criminal("Райнхардт Лили Игоревна", "Россия", 175, 80, false),
                new Criminal("Махно Иван Васильевич", "Белоруссия", 185, 87, false),
                new Criminal("Приходько Емельян Корнеевич", "Белоруссия", 185, 87, false)};
            int userInputHeight;
            int userInputWeight;
            string userInputNationality;
            List<Criminal> filteredCriminals;

            userInputHeight = EnquireParameter("рост");
            userInputWeight = EnquireParameter("вес");
            Console.Write("Укажите гражданство подозреваемого: ");
            userInputNationality = Console.ReadLine();
            filteredCriminals = FilterCriminals(criminals, userInputHeight, userInputWeight, userInputNationality);
            ShowFilteredCriminals(filteredCriminals.ToList());
        }

        static void ShowFilteredCriminals(List<Criminal> criminals)
        {
            Console.WriteLine($"\nФИО   -    Гражданство  -  Рост  -  Вес  -  Статус\n");

            foreach (var criminal in criminals)
            {
                Console.WriteLine($"{criminal.FullName} - {criminal.Nationality}  -  {criminal.Height}  -  {criminal.Weight}  -  {criminal.Status}");
            }

            Console.ReadKey();
        }

        static List<Criminal> FilterCriminals(List<Criminal> criminals, int height, int weight, string nationality) 
        {
            var filteredCriminals = from criminal in criminals
                                    where (criminal.Nationality == nationality && criminal.Height == height
                                    && criminal.Weight == weight && criminal.IsImprisoned == false)
                                    select criminal;
            return filteredCriminals.ToList();
        }

        static int EnquireParameter(string parameter) 
        {
            int maxValue = 0;
            int minValue = 0;
            int verifiedParameter;

            if (parameter == "рост")
            {
                maxValue = 250;
                minValue = 100;
            }
            else if (parameter == "вес")
            {
                maxValue = 30;
                minValue = 350;
            }
            else 
            {
                Console.WriteLine("Ошибка: Неверный параметр поиска!");
                Console.ReadKey();
                Environment.Exit(0);
            }
            
            do
            {
                Console.Write($"Укажите {parameter} подозреваемого: ");
            }
            while (int.TryParse(Console.ReadLine(), out verifiedParameter) == false || minValue < 100 || maxValue > 250);

            return verifiedParameter;
        }
    }

    class Criminal
    {
        public Criminal(string fullName, string nationality, int height, int weight, bool isImprisoned)
        {
            FullName = fullName;
            Nationality = nationality;
            Height = height;
            Weight = weight;
            IsImprisoned = isImprisoned;
            Status = SetStatus();
        }

        public string FullName { get; private set; }
        public string Nationality { get; private set; }
        public int Height { get; private set; }
        public int Weight { get; private set; }
        public bool IsImprisoned { get; private set; }
        public string Status { get; private set; }

        private string SetStatus()
        {
            if (IsImprisoned)
            {
                return "Отбывает срок";
            }
            else
            {
                return "На свободе";
            }
        }
    }
}
