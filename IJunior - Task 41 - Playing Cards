using System;
using System.Collections.Generic;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandTakeCard = "1";
            const string CommandShowCards = "2";
            const string CommandFoldCards = "3";
            const string CommandExit = "4";

            PackOfCards packOfCards = new PackOfCards();
            Player player1 = new Player();
            string showCommands = $"{CommandTakeCard} - взять карту" +
                $"\n{CommandShowCards} - показать все карты" +
                $"\n{CommandFoldCards} - сбросить все карты" +
                $"\n{CommandExit} - выйти";
            string userInput;
            bool isLeaving = false;

            while (isLeaving == false)
            {
                Console.WriteLine(showCommands);
                Console.WriteLine($"\nКоличество карт на руках: {player1.AvailableCards} / {player1.MaxCards}");
                Console.Write("\nУкажите команду:");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandTakeCard:
                        player1.TryTakeCard(packOfCards);
                        break;

                    case CommandShowCards:
                        player1.ShowCards();
                        break;

                    case CommandFoldCards:
                        player1.FoldCards();
                        break;

                    case CommandExit:
                        isLeaving = true;
                        break;

                    default:
                        Console.WriteLine("Ошибка: неизвестная команда!");
                        break;
                }

                Console.Clear();
            }
        }
    }

    class Player
    {
        private List<Card> _cardsOnHands = new List<Card>();

        public int AvailableCards { get; private set; } = 0;
        public int MaxCards { get; private set; } = 5;

        public void TryTakeCard(PackOfCards packOfCards)
        {
            if (AvailableCards < MaxCards)
            {
                _cardsOnHands.Add(packOfCards.ChooseRandomCard());
                AvailableCards++;
            }
            else
            {
                Console.WriteLine("У Вас на руках максимальное количетсво карт! Взять еще одну невозможно!");
                Console.ReadKey();
            }
        }

        public void ShowCards()
        {
            if (AvailableCards != 0)
            {
                Console.WriteLine("\nВам выпали следующие карты:");

                foreach (var card in _cardsOnHands)
                {
                    Console.WriteLine(card.Value + " " + card.Suit);
                }
            }
            else
            {
                Console.WriteLine("Вы не взяли ни одной карты!");
            }

            Console.ReadKey();
        }

        public void FoldCards() 
        {
            if (AvailableCards != 0)
            {
                foreach (var card in _cardsOnHands)
                {
                    card.MakeAvailable();
                }

                _cardsOnHands = new List<Card>();
                AvailableCards = 0;
                Console.WriteLine("Вы сбросили карты!");
            }
            else
            {
                Console.WriteLine("Вы не взяли ни одной карты!");
            }

            Console.ReadKey();
        }
    }

    class PackOfCards
    {
        private const string Spades = "Пики";
        private const string Hearts = "Черви";
        private const string Diamonds = "Бубны";
        private const string Clubs = "Трефы";
        private const string Trump = "Туз";
        private const string One = "1";
        private const string Two = "2";
        private const string Three = "3";
        private const string Four = "4";
        private const string Five = "5";
        private const string Six = "6";
        private const string Seven = "7";
        private const string Eight = "8";
        private const string Nine = "9";
        private const string Ten = "10";
        private const string Jack = "Валет";
        private const string Queen = "Дама";
        private const string King = "Король";

        private List<Card> _packOfCards = new List<Card>();

        public PackOfCards()
        {
            Generate();
        }

        public Card ChooseRandomCard()
        {
            Random random = new Random();
            Card randomCard;
            int cardPosition;

            do
            {
                cardPosition = random.Next(0, _packOfCards.Count);
                randomCard = _packOfCards[cardPosition];
            }
            while (randomCard.IsAvailable != true);

            randomCard.MakeUnavailable();
            return randomCard;
        }

        private void Generate()
        {
            List<string> suits = new List<string> { Spades, Hearts, Diamonds, Clubs};
            List<string> values = new List<string> { Trump, One, Two, Three, Four, Five, Six, Seven, Eight, Nine, Ten, Jack, Queen, King};

            foreach (var suit in suits) 
            {
                foreach (var value in values) 
                {
                    _packOfCards.Add(new Card(value, suit, true));
                }
            }
        }
    }

    class Card
    {
        public Card(string value, string cardSuit, bool isAvailable)
        {
            Value = value;
            Suit = cardSuit;
            IsAvailable = isAvailable;
        }

        public string Value { get; private set; }
        public string Suit { get; private set; }
        public bool IsAvailable { get; private set; }

        public void MakeUnavailable()
        {
            IsAvailable = false;
        }

        public void MakeAvailable()
        {
            IsAvailable = true;
        }
    }
}
