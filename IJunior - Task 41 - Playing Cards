using System;
using System.Collections.Generic;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandTakeCard = "1";
            const string CommandShowCards = "2";
            const string CommandFoldCards = "3";
            const string CommandExit = "4";

            PackOfCards packOfCards = new PackOfCards();
            Player player1 = new Player();
            string showCommands = $"{CommandTakeCard} - взять карту" +
                $"\n{CommandShowCards} - показать все карты" +
                $"\n{CommandFoldCards} - сбросить все карты" +
                $"\n{CommandExit} - выйти";
            string userInput;
            bool isLeaving = false;

            while (isLeaving == false)
            {
                Console.WriteLine(showCommands);
                Console.WriteLine($"\nКоличество карт на руках: {player1.AvailableCards} / {player1.MaxCards}");
                Console.Write("\nУкажите команду:");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandTakeCard:
                        player1.TryTakeCard(packOfCards);
                        break;

                    case CommandShowCards:
                        player1.ShowCards();
                        break;

                    case CommandFoldCards:
                        player1.FoldCards(packOfCards);
                        break;

                    case CommandExit:
                        isLeaving = true;
                        break;

                    default:
                        Console.WriteLine("Ошибка: неизвестная команда!");
                        break;
                }

                Console.Clear();
            }
        }
    }

    class Player
    {
        private List<Card> _cardsOnHands = new List<Card>();

        public int AvailableCards { get; private set; } = 0;
        public int MaxCards { get; private set; } = 5;

        public void TryTakeCard(PackOfCards packOfCards)
        {
            if (AvailableCards < MaxCards)
            {
                packOfCards.GiveTopCard(out Card topCard);
                _cardsOnHands.Add(topCard);
                AvailableCards++;
            }
            else
            {
                Console.WriteLine("У Вас на руках максимальное количетсво карт! Взять еще одну невозможно!");
                Console.ReadKey();
            }
        }

        public void ShowCards()
        {
            if (AvailableCards != 0)
            {
                Console.WriteLine("\nВам выпали следующие карты:");

                foreach (var card in _cardsOnHands)
                {
                    Console.WriteLine(card.Value + " " + card.Suit);
                }
            }
            else
            {
                Console.WriteLine("Вы не взяли ни одной карты!");
            }

            Console.ReadKey();
        }

        public void FoldCards(PackOfCards packOfCards)
        {
            if (AvailableCards != 0)
            {
                packOfCards.TakeBackCards(_cardsOnHands);
                AvailableCards = 0;
                _cardsOnHands = new List<Card>();
                Console.WriteLine("Вы сбросили карты!");
            }
            else
            {
                Console.WriteLine("Вы не взяли ни одной карты!");
            }

            Console.ReadKey();
        }
    }

    class PackOfCards
    {
        private List<Card> _packOfCards = new List<Card>();

        public PackOfCards()
        {
            Generate();
            ShuffleCards();
        }

        public void GiveTopCard(out Card topCard) 
        {
            topCard = _packOfCards[0];
            _packOfCards.RemoveAt(0);
        }

        private void Generate()
        {
            List<string> suits = new List<string> { "Пики", "Черви", "Бубны", "Трефы" };
            List<string> values = new List<string> { "Туз", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "Валет", "Дама", "Король" };

            foreach (var suit in suits)
            {
                foreach (var value in values)
                {
                    _packOfCards.Add(new Card(value, suit));
                }
            }
        }

        public void TakeBackCards(List<Card> playerCards)
        {
            foreach (var card in playerCards)
            {
                _packOfCards.Add(card);
            }

            ShuffleCards();
        }

        private void ShuffleCards()
        {
            Random random = new Random();
            Card bufferCard;
            int shuffledCardPosition;

            for (int i = 0; i < _packOfCards.Count; i++)
            {
                shuffledCardPosition = random.Next(0,_packOfCards.Count);
                bufferCard = _packOfCards[i];
                _packOfCards[i] = _packOfCards[shuffledCardPosition];
                _packOfCards[shuffledCardPosition] = bufferCard;
            }
        }       
    }

    class Card
    {
        public Card(string value, string cardSuit)
        {
            Value = value;
            Suit = cardSuit;
        }

        public string Value { get; private set; }
        public string Suit { get; private set; }
    }
}
