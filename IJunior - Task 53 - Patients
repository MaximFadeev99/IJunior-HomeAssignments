using System;
using System.Collections.Generic;
using System.Linq;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Hospital hospital = new Hospital();

            hospital.Work();
        }
    }

    class Hospital
    {
        private List<Patient> _patients = new List<Patient>();

        public Hospital() 
        {
            AddInitialPatients();
        }

        public void Work()
        {
            const string CommandSortByLastName = "1";
            const string CommandSortByAge = "2";
            const string CommandFilterByDisease = "3";

            string commandOptions = $"{CommandSortByLastName} - отсортировать по фамилии;\n" +
                $"{CommandSortByAge} - отсортировать по возрасту (по возрастанию)\n" +
                $"{CommandFilterByDisease} - отфильтровать по болезни";
            bool isLeaving = false;
            string userInput;
            List<Patient> sortedPatients;

            while (isLeaving == false)
            {
                Console.WriteLine(commandOptions);                
                Console.Write("\nВыберите действие из списка выше: ");
                userInput = Console.ReadLine(); 
               
                switch (userInput)
                {
                    case CommandSortByLastName:
                        sortedPatients = (from patient in _patients orderby patient.FullName select patient).ToList();
                        ShowPatients(sortedPatients);
                        break;

                    case CommandSortByAge:
                        sortedPatients = _patients.OrderBy(patient => patient.Age).ToList();
                        ShowPatients(sortedPatients);
                        break;

                    case CommandFilterByDisease:
                        FilterByDisease();
                        break;
                }

                Console.Clear();
            }
        }

        private void ShowPatients(List<Patient> patients)
        {
            Console.WriteLine($"\nФИО   -    Возраст   -   Заболевание\n");

            foreach (var patient in patients)
            {
                Console.WriteLine($"{patient.FullName}  -  {patient.Age}  -  {patient.Disease}");
            }

            Console.ReadKey();
        }

        private void FilterByDisease()
        {
            List<Patient> filteredPatients;
            string userInput;

            Console.Write("\nВведите название болезни: ");
            userInput = Console.ReadLine();
            filteredPatients = _patients.Where(patient => patient.Disease.ToLower() == userInput.ToLower()).ToList();

            if (filteredPatients.Count == 0)
            {
                Console.WriteLine("Пациенты с указанным заболеванием не зарегистрированы.");
            }
            else
            {
                ShowPatients(filteredPatients);
            }
        }

        private void AddInitialPatients() 
        {
            _patients.Add(new Patient("Иванов Петр Васильевич", 68, "диабет"));
            _patients.Add(new Patient("Сурков Владимир Петрович", 13, "коронавирус"));
            _patients.Add(new Patient("Матвеев Матвей Матвеевич", 45, "СПИД"));
            _patients.Add(new Patient("Максимов Максим Максимович", 16, "диабет"));
            _patients.Add(new Patient("Ахбетов Худайдот Магометович", 19, "коронавирус"));
            _patients.Add(new Patient("Проско Василий Николаевич", 34, "СПИД"));
            _patients.Add(new Patient("Романенко Петр Игнатьевич", 25, "диабет"));
            _patients.Add(new Patient("Коркина Любовь Алексеевна", 22, "коронавирус"));
            _patients.Add(new Patient("Райнхардт Лили Игоревна", 51, "СПИД"));
            _patients.Add(new Patient("Махно Иван Васильевич", 78, "диабет"));
            _patients.Add(new Patient("Приходько Емельян Корнеевич", 80, "коронавирус"));
        }
    }

    class Patient
    {
        public Patient(string fullName, int age, string disease)
        {
            FullName = fullName;
            Age = age;
            Disease = disease;
        }

        public string FullName { get; private set; }
        public int Age { get; private set; }
        public string Disease { get; private set; }
    }
}
