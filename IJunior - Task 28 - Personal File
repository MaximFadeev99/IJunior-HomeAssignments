using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.ExceptionServices;
using System.Text;
using System.Threading.Tasks;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAdd = "1";
            const string CommandShowAll = "2";
            const string CommandDeleteEmployee = "3";
            const string CommandLastNameSearch = "4";
            const string CommandExit = "5";

            string[,] employees = { { "Петров Михаил Юрьевич", "Водитель" }, { "Русаков Дмитрий Павлович", "Охранник" }, { "Сидоров Сергей Русланов", "Охранник" } };
            string userInput;
            string commandsList = $"{CommandAdd} - добавить нового сотрудника\n" +
                $"{CommandShowAll} - показать список всех текущих сотрудников\n" +
                $"{CommandDeleteEmployee} - удалить досье сотрудника\n" +
                $"{CommandLastNameSearch} - поиск сотрудника по фамилии\n" +
                $"{CommandExit} - выйти";
            bool isLeaving = false;
            string name;             

            while(isLeaving == false)
            {
                Console.WriteLine("Добро пожаловать в систему управления кадрами!");
                Console.WriteLine();
                Console.WriteLine(commandsList);
                Console.WriteLine();
                Console.Write("Укажите команду:");
                userInput = Console.ReadLine();
                
                switch (userInput)
                {
                    case CommandAdd:
                        string position;
                        Console.WriteLine();
                        Console.Write("Укажите ФИО нового сотрудника:");
                        name = Console.ReadLine();
                        Console.Write("Укажите должность нового струдника:");
                        position = Console.ReadLine();
                        employees = AddEmployee (employees, name, position);
                        Console.WriteLine("Новый сотрудник успешно добавлен!");
                        break;

                    case CommandShowAll:
                        ShowAll(employees);
                        break;

                    case CommandDeleteEmployee:
                        Console.Write("Укажите фамилию сотрудника для удаления:");
                        name = Console.ReadLine();
                        employees = DeleteEmployee(employees, name);
                        break;

                    case CommandLastNameSearch:
                        Console.Write("Укажите фамилию сотрудника для поиска:");
                        name = Console.ReadLine();
                        LastNameSearch (employees, name);
                        break;

                    case CommandExit:
                        isLeaving = true;
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        static string[,] AddEmployee(string[,] employees, string name, string position)
        {
            string[,] tempEmployees = new string[employees.GetLength(0) + 1, employees.GetLength(1)];

            for (int i = 0; i < employees.GetLength(0); i++)
            {
                for (int j = 0; j < employees.GetLength(1); j++)
                {
                    tempEmployees[i, j] = employees[i, j];
                }
            }

            tempEmployees[tempEmployees.GetLength(0) - 1, 0] = name;
            tempEmployees[tempEmployees.GetLength(0) - 1, 1] = position;
            employees = tempEmployees;
            return employees;
        }

        static void ShowAll(string[,] employees)
        {
            Console.WriteLine();

            for (int i = 0; i < employees.GetLength(0); i++)
            {
                Console.WriteLine(i + 1 + ") " + employees[i, 0] + " - " + employees[i, 1]);
            }
        }

        static void LastNameSearch(string[,] employees, string lastName) 
        {

            for (int i = 0; i < employees.GetLength(0); i++)
            {
                if ( employees[i, 0].Split(' ')[0].ToLower() == lastName.ToLower()) 
                {
                    Console.WriteLine();
                    Console.WriteLine("Сотрудник найден: " + employees[i, 0] + " - " + employees[i, 1]);
                    goto End;                
                }
            }

            Console.WriteLine("Сотрудник не найден.");
            End:;
        }

        static string [,] DeleteEmployee (string[,] employees, string lastName) 
        {
            string userInput;
            string[,] tempEmployees = new string[employees.GetLength(0) - 1, employees.GetLength(1)];
            int rowCount;

            for (int i = 0; i < employees.GetLength(0); i++)
            {
                if (employees[i, 0].Split(' ')[0].ToLower() == lastName.ToLower())
                {
                    Console.WriteLine();
                    Console.WriteLine("Сотрудник найден: " + employees[i, 0] + " - " + employees[i, 1]);
                    Console.WriteLine("Нажмите любую клавишу, чтобы продолжить удаление, либо 3, чтобы отменить удаление...");
                    userInput = Console.ReadLine();

                    if (userInput == "3")
                    {
                        goto End;
                    }
                    else 
                    {
                        rowCount = 0;

                        for (int j = 0; j < employees.GetLength(0); j++) 
                        {
                            if (j != i) 
                            {
                                tempEmployees[rowCount,0] = employees[j, 0];
                                rowCount++;
                            }
                        }

                        rowCount = 0;

                        for (int j = 0; j < employees.GetLength(0); j++)
                        {
                            if (j != i)
                            {
                                tempEmployees[rowCount, 1] = employees[j, 1];
                                rowCount++;
                            }
                        }

                        employees = tempEmployees;
                        Console.WriteLine("Сотрудник успешно удален.");
                        goto End;
                    }                   
                }
            }
          
            Console.WriteLine("Сотрудник не найден.");
           
        End:
            return employees;
        }
    }
}
