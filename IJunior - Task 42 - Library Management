using System;
using System.Collections.Generic;

namespace CSTest2
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddBook = "1";
            const string CommandRemoveBook = "2";
            const string CommandSearchForBook = "3";
            const string CommandShowAllBooks = "4";
            const string CommandExit = "5";

            Database books = new Database();
            string commandOptions = $"\n{CommandAddBook} - добавить книгу" +
                $"\n{CommandRemoveBook} - удалить книгу" +
                $"\n{CommandSearchForBook} - поиск книг по параметру" +
                $"\n{CommandShowAllBooks} - показать все книги" +
                $"\n{CommandExit} - выйти из системы";
            string userInput;
            bool isLeaving = false;

            while (isLeaving == false)
            {
                Console.WriteLine("Добро пожаловать в библиотеку!");
                Console.WriteLine(commandOptions);
                Console.Write("\nВыберите действие: ");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandAddBook:
                        books.AddNewBook();
                        break;

                    case CommandRemoveBook:
                        books.RemoveBook();
                        break;

                    case CommandSearchForBook:
                        books.SearchForBooks();
                        break;

                    case CommandShowAllBooks:
                        books.ShowBooks();
                        break;

                    case CommandExit:
                        isLeaving = true;
                        break;

                    default:
                        Console.WriteLine("Ошибка: неизвестная команда!");
                        Console.ReadKey();
                        break;
                }

                Console.Clear();
            }
        }
    }

    class Database
    {
        private const string SearchParameterTitle = "название";
        private const string SearchParameterAuthor = "автор";
        private const string SearchParameterYear = "год";
        private const string SearchParameterPublishingHouse = "издательство";

        private List<Book> _books = new List<Book>();

        public Database()
        {
            AddInitialBooks();
        }

        public void AddNewBook()
        {
            _books.Add(new Book(EnquireStringParameter(SearchParameterTitle), EnquireStringParameter(SearchParameterAuthor), EnquireStringParameter(SearchParameterYear), EnquireStringParameter(SearchParameterPublishingHouse)));
            Console.WriteLine("Новая книга успешно добавлена!");
            Console.ReadKey();
        }

        public void RemoveBook()
        {
            List<Book> foundBooks = FindTargetBooks1(ShowSearchParameters());

            if (foundBooks.Count == 0)
            {
                Console.WriteLine("По Вашему запросу не найдено ни одной книги!");
            }
            else
            {
                Console.WriteLine($"Количество найденных книг: {foundBooks.Count}");

                foreach (var book in foundBooks)
                {
                    _books.Remove(book);
                }

                Console.WriteLine("Все найденные книги удалены!");
            }

            Console.ReadKey();
        }

        public void SearchForBooks()
        {
            List <Book> foundBooks= FindTargetBooks1(ShowSearchParameters());

            if (foundBooks.Count == 0)
            {
                Console.WriteLine("По Вашему запросу не найдено ни одной книги!");
            }
            else
            {
                ShowBooks(foundBooks);
            }
        }

        public void ShowBooks()
        {
            Console.WriteLine("\nНазвание     -     Автор    -    Год    -    Издательство\n");

            foreach (var book in _books)
            {
                book.ShowProperties();
            }

            Console.ReadKey();
        }

        private void AddInitialBooks()
        {
            _books.Add(new Book("Мастер и Маргарита", "Булгаков Михаил", "1929", "СССР Пресс"));
            _books.Add(new Book("Собачье сердце", "Булгаков Михаил", "1925", "СССР Пресс"));
            _books.Add(new Book("Граф Монте-Кристо", "Дюма Александр", "1844", "Империя Пресс"));
            _books.Add(new Book("Три мушкетера", "Дюма Александр", "1879", "Империя Пресс"));
            _books.Add(new Book("Идиот", "Достоевский Федор", "1868", "Империя Пресс"));
            _books.Add(new Book("Братья Карамазовы", "Достоевский Федор", "1879", "Империя Пресс"));
            _books.Add(new Book("Униженные и оскорбленные", "Достоевский Федор", "1868", "Империя Пресс"));
        }

        private void ShowBooks(List<Book> books)
        {
            Console.WriteLine("\nНазвание     -     Автор    -    Год    -    Издательство\n");

            foreach (var book in books)
            {
                book.ShowProperties(); 
            }

            Console.ReadKey();
        }

        private string ShowSearchParameters()
        {
            Console.WriteLine("\nДоступны следующие параметры для поиска книг:");
            Console.WriteLine(SearchParameterTitle);
            Console.WriteLine(SearchParameterAuthor);
            Console.WriteLine(SearchParameterYear);
            Console.WriteLine(SearchParameterPublishingHouse);
            Console.Write("\nУкажите параметр:");
            return Console.ReadLine();
        }

        private List<Book> FindTargetBooks1(string searchParameter)
        {
            List<Book>  foundBooks = new List<Book>();
            string userInput;

            switch (searchParameter.ToLower())
            {
                case SearchParameterTitle:
                    userInput = EnquireStringParameter(searchParameter).ToLower();

                    foreach (var book in _books)
                    {
                        if (book.Title.ToLower() == userInput)
                        {
                            foundBooks.Add(book);
                        }
                    }
                    break;

                case SearchParameterAuthor:
                    userInput = EnquireStringParameter(searchParameter).ToLower();

                    foreach (var book in _books)
                    {
                        if (book.Author.Split(' ')[0].ToLower() == userInput)
                        {
                            foundBooks.Add(book);
                        }
                    }
                    break;

                case SearchParameterYear:
                    userInput = EnquireStringParameter(searchParameter).ToLower();

                    foreach (var book in _books)
                    {
                        if (book.PublicationYear == userInput)
                        {
                            foundBooks.Add(book);
                        }
                    }
                    break;

                case SearchParameterPublishingHouse:
                    userInput = EnquireStringParameter(searchParameter).ToLower();

                    foreach (var book in _books)
                    {
                        if (book.PublishingHouse.ToLower() == userInput)
                        {
                            foundBooks.Add(book);
                        }
                    }
                    break;

                default:
                    Console.WriteLine("Ошибка: неизвестный параметр поиска!");
                    break;
            } 
            
            return foundBooks;
        }

        //private List<Book>  FindTargetBooks2(string searchParameter, Book book.Property)
        //{
            //List<Book> foundBooks = new List<Book>();
            //string userInput;

            //userInput = EnquireStringParameter(searchParameter).ToLower();

            //foreach (var book in _books)
            //{
                //if (book.Property.ToLower() == userInput)
                //{
                    //foundBooks.Add(book);
                //}
            //}
        //}

        private string EnquireStringParameter(string searchParameter) 
        {
            string userInput;

            Console.Write($"Детализируйте параметр \"{searchParameter}\":");
            userInput = Console.ReadLine();

            while (userInput == string.Empty)
            {
                Console.Write("\nОшибка: Вы ничего не указали! Повторите попытку:");
                userInput = Console.ReadLine();
            }

            return userInput;
        }      
    }

    class Book
    {
        public Book(string title, string author, string publicationYear, string publishingHouse)
        {
            Title = title;
            Author = author;
            PublicationYear = publicationYear;
            PublishingHouse = publishingHouse;
        }

        public string Title { get; private set; }
        public string Author { get; private set; }
        public string PublicationYear { get; private set; }
        public string PublishingHouse { get; private set; }

        public void ShowProperties() 
        {
            Console.WriteLine(Title + " - " + Author + " - " + PublicationYear + " - " + PublishingHouse);
        }
    }
