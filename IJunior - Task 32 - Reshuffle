using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace CSTest1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = {1,3,4,7,10}
            
            Reshuffle(originalArray, out reshuffledArray); 
            Console.Write("Изначальный массив:");
            Depict (originalArray, 1, 0);
            Console.SetCursorPosition (0, 5);
            Console.Write("Измененный массив:");
            Depict (reshuffledArray, 1, 5);
            Console.ReadKey();
        }
        
        static int[] Reshuffle (int[] originalArray, out int[] reshuffledNumbers)
        {
          Random random = new random(); 
          int minValue = 0; 
          int maxValue = originalArray.Length;
          int[] reshuffledNumbers = [maxValue]; 
          int[] randomNumbers = [maxValue];
          int[] positionCount;
          
          for (int i = 0; i < maxValue; i++)
          {
            randomNumbers[i] = random.Next(minValue, maxValue);
            
            while (randomNumbers.Contains(randomNumbers[i]))
            {
              randomNumbers[i] = random.Next(minValue, maxValue);
            }
          }
                    
          positionCount = 0;
          
          foreach (var number in randomNumbers)
          {            
            reshuffledNumbers[number] = originalArray[positionCount];
            positionCount++;
          }
          
          return reshuffledNumbers;         
        }
        
        static void Depict (ref int[] depictedArray, int cursorPositionX, int cursorPositionY)
        {
            Console.SetCursorPosition (cursorPositionX, cursorPositionY); 
            
            for( int i = 0, i < depictedArray.Length, i++)
            {
                Console.WriteLine(i+1 +") " + depictedArray[i]);
            }
        }
    }
}
